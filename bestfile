#include<stdio.h>
#include<stdlib.h>
#include<string.h>

	//ระบบจัดการข้อมูลการฝึกอบรมพนักงาน

	struct Internship {
        char EmployeeName[50];
    	char TrainingCourse[50];
	char StartDate[50];
    	char EndDate[50];
	};

	struct Internship entry;
	char Name[50];

	void ShowInformation() {
	FILE *fp = fopen("internship.csv", "r");
    	char line[256];
    	int lineNo = 0;

    	if (fp == NULL) {
        printf("No data yet.\n");
    	} else {
        printf("All Records:\n");
        printf("EmployeeName,TrainingCourse,StartDate,EndDate\n");
        while (fgets(line, sizeof(line), fp)) {
            lineNo++;
            printf("%d. %s", lineNo, line);  
            // each line already ends with '\n'
        }
        fclose(fp);
    	}

    	// Pause until user presses Enter
   	printf("\nPress Enter to continue...");
   	getchar();  // consume leftover newline
   	getchar();  // wait for Enter
	}

	void AddMore() {
	system("clear");
        printf("Adding New Member\n");
    
        printf("Employee Name : ");
	scanf(" %49[^\n]", entry.EmployeeName);    

        printf("Training Course : ");
        scanf("%49s", entry.TrainingCourse);
    

        printf("Format : yyyy-mm-dd\n");
        printf("Start Date : ");
        scanf("%49s", entry.StartDate);
    
        printf("End Date : ");
        scanf("%49s", entry.EndDate);
    
        // Append to CSV
        FILE *fp = fopen("internship.csv", "a");  // append mode
        if (fp != NULL) {
        fprintf(fp, "%s,%s,%s,%s\n",
            entry.EmployeeName,
            entry.TrainingCourse,
            entry.StartDate,
            entry.EndDate);
        fclose(fp);
        printf("Saved to internship.csv\n");
    	} else {
        printf("Error: Could not open file!\n");
    	}
	}
	

	void Search() {
	printf("Search For : ");
	
	}

	void Update() {
	int target, lineNo = 0, found = 0;
	char line[256];
	struct Internship newEntry;
	
	// Show all records first
	ShowInformation();
	
	printf("Enter record number to update: ");
	scanf("%d", &target);
	getchar();	
	FILE *fp = fopen("internship.csv", "r");
	FILE *temp = fopen("temp.csv", "w");
	
	if (fp == NULL || temp == NULL) {
	    printf("Error opening file!\n");
	    return;
	}
	
	while (fgets(line, sizeof(line), fp)) {
	    lineNo++;
	    if (lineNo == target) 
	    {
            found = 1;
            // Get new info
            printf("Enter new Employee Name: ");
            scanf("%49[\n]", newEntry.EmployeeName);

            printf("Enter new Training Course: ");
            scanf("%49s", newEntry.TrainingCourse);

            printf("Enter new Start Date: ");
            scanf("%49s", newEntry.StartDate);

            printf("Enter new End Date: ");
            scanf("%49s", newEntry.EndDate);

            // Write updated line
            fprintf(temp, "%s,%s,%s,%s\n",
                    newEntry.EmployeeName,
                    newEntry.TrainingCourse,
                    newEntry.StartDate,
                    newEntry.EndDate);
            } else 
	    {
            fputs(line, temp);  // copy unchanged line
            }
            }

	    fclose(fp);
	    fclose(temp);
	
	    remove("internship.csv");
	    rename("temp.csv", "internship.csv");
	
	    if (found) {
	        printf("Record %d updated successfully.\n", target);
	    } else {
	        printf("No record found at number %d.\n", target);
	    }
	
	    printf("\nPress Enter to continue...");
	    getchar(); getchar();	
		}
	
		void DeleteMore() {
		    int target, lineNo = 0, found = 0;
	    char line[256];
	
	    printf("Enter record number to delete: ");
	    scanf("%d", &target);
	
	    FILE *fp = fopen("internship.csv", "r");
	    FILE *temp = fopen("temp.csv", "w");
	
	    if (fp == NULL || temp == NULL) {
	        printf("Error opening file!\n");
	        return;
	    }
	
	    // Copy all lines except the one to delete
	    while (fgets(line, sizeof(line), fp)) {
	        lineNo++;
	        if (lineNo == target) {
	            found = 1;   // skip writing this line
	            continue;
	        }
	        fputs(line, temp);
	    }
	
	    fclose(fp);
	    fclose(temp);
	
	    // Replace old file with new one
	    remove("internship.csv");
	    rename("temp.csv", "internship.csv");
	
	    if (found) {
	        printf("Record %d deleted successfully.\n\n", target);
	
	        // Show updated list
	        fp = fopen("internship.csv", "r");
	        lineNo = 0;
	        if (fp != NULL) {
	            printf("Updated Records:\n");
	            while (fgets(line, sizeof(line), fp)) {
	                lineNo++;
	                printf("%d. %s", lineNo, line);
	            }
	            fclose(fp);
	        }
	    } else {
	        printf("No record found at number %d.\n", target);
	    }
	
	    printf("\nPress Enter to continue...");
	    getchar(); getchar();
		}
	
int main()
{




	int choice;
	int invalid=0;

	while(1){

	if(invalid){
	printf("\033[31mInvalid Number!\033[0m");
	getchar();
	invalid=0;
	}

	system("clear");
	printf("\nVery Nice Display Menu For Internship\n");
	printf("Show   (1)\n");
	printf("Add    (2)\n");
	printf("Search (3)\n");
	printf("Update (4)\n");
	printf("Delete (5)\n");
	printf("Exit   (6)\n\n");	
	printf("Choose one : ");
	scanf("%d",&choice);
	
	switch (choice)
{
	case 1:
	ShowInformation();
	break;

	case 2:
	AddMore();
	break;

	case 3:
	Search();
	break;

	case 4:
	Update();
	break;
	
	case 5:
	DeleteMore();
	break;

	case 6:
	return 0;
	
	default:{
	invalid=1;
	continue;
		}
	
}
//	printf("Test tTest");
}
}



